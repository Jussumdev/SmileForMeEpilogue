
//Creates the html for a new email from an html fillTemplate
//the following variables must be supplied:
//
//${name}
//              the displayed name of the email sender
//${address}
//              the displayed address line of the email sender
//${profilesrc}
//              the name of the sender's profile image, to be added to the full path when img tag is generated
//${profileimgdata}
//              the [data-imageData] for clicking on the sender's profile image
//${text}
//              the body of the email
//${attachmentHTML}
//              the full string generated by concatenating any number of outputs of fillAttachmentTemplate()
//

function fillTemplate(name, address, profilesrc, profileimgdata, hasProfilePic, text, attachmentHTML) {
var onclick = (hasProfilePic) ? "openImageLink(this)" : "";
return `
<div class = "emailContainer">
  <div class = "emailHeader">
    <div class = "emailHeaderText">
      <p>
        <span class="headerTextName">${name}</span>&nbsp&nbsp&nbsp
        <span class="emailAddress">&lt${address}&gt</span>
      </p>
    </div>
    <div class = "emailHeaderImage" onclick = ${onclick} data-imageData = "${profileimgdata}">
      <img src="images/profiles/small/${profilesrc}"></img>
    </div>
  </div>
  <div class = "emailBody">
    <p>
      ${text}
    </p>
  </div>
  <div class = "attachments">
    ${attachmentHTML}
  </div>
</div>
`
}

//Creates the html for a new attachment from an html fillTemplate
//the following variables must be supplied:
//
//${src}
//              the source of the image to display in the attachment preview
//${imgdata}
//              the [data-imageData] for clicking on the sender's profile image

function fillAttachmentTemplate(src, imgdata) {
return `
<div class = imgAttachment onclick = "openImageLink(this)" data-imageData = "${imgdata}">
  <img src="${src}" class = imgAttachIMG></img>
  <div class = paperClip>
    <img src = "images/ui/clip.png"></img>
  </div>
</div>
`
}
